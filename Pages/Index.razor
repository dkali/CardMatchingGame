@page "/"
@using CardMatchingGame.Data;
@inject NavigationManager NavManager
@inject GameStateService GameState

<PageTitle>Lobby</PageTitle>
<div class="vertical-center">
    <RadzenStack Orientation=@Orientation.Vertical Gap="10px" JustifyContent=@JustifyContent.Center AlignItems=@AlignItems.Center>
        <div>
            please select the board size
        </div>
        <div>
            <RadzenNumeric
                Min="1" Max="7"
                @bind-Value=@rowSize
                Placeholder="number of rows"
                ShowUpDown="false"
                TValue="int?"
                Change=@(args => OnSettingsChange())
            />
            <RadzenNumeric 
                Min="1" Max="7"
                @bind-Value=@colSize
                Placeholder="number of columns"
                ShowUpDown="false"
                TValue="int?"
                Change=@(args => OnSettingsChange())
            />
        </div>
        <RadzenButton class="panel-element" Disabled=@disabledButton Text="@text" Click=@(args => OnClick())>Start Game</RadzenButton>
    </RadzenStack>
</div>

@code {
    string text = "Hi";
    int? rowSize;
    int? colSize;
    bool disabledButton = true;

    private void OnClick()
    {
        GameState.InitGame((int)rowSize, (int)colSize);
        NavManager.NavigateTo("/game");
    }

    private void OnSettingsChange()
    {
        if (rowSize == null || colSize == null)
        {
            disabledButton = true;
            return;
        }

        if ((rowSize * colSize) % 2 != 0)
        {
            // only even number of cards allowed
            disabledButton = true;
            return;
        }

        disabledButton = false;
    }
}
